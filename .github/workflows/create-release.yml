name: Create Release

on:
  pull_request:
    types: [closed]
    branches: [main, dev-v3]

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Prepare release')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract version and checkout release branch
        id: version
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          VERSION=$(echo "$TITLE" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+')
          MAJOR=$(echo "$VERSION" | cut -d. -f1 | sed 's/v//')
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          BRANCH="release-$MAJOR.$MINOR"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          git checkout "$BRANCH"

      - name: Create tag and release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git tag "${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.version }}"

          gh release create "${{ steps.version.outputs.version }}" \
            --title "${{ steps.version.outputs.version }}" \
            --notes "Release ${{ steps.version.outputs.version }}"

      - name: Trigger docs update
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          repository: ${{ github.repository_owner }}/example-actions-autorelease-docs
          event-type: version-released
          client-payload: |
            {
              "version": "${{ steps.version.outputs.version }}"
            }
